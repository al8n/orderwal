[package]
name = "orderwal"
version = "0.6.0"
edition = "2021"
repository = "https://github.com/al8n/orderwal"
homepage = "https://github.com/al8n/orderwal"
documentation = "https://docs.rs/orderwal"
description = "A generic-purpose, atomic, ordered, zero-copy read, zero-cost (in-place) write, Write-Ahead Log implementation for Rust."
license = "MIT OR Apache-2.0"
rust-version = "1.81.0"
categories = ["filesystem", "database-implementations", "development-tools", "data-structures", "no-std"]
keywords = ["wal", "write-ahead-log", "append-only", "append-only-log", "bitcask"]

[[bench]]
path = "benches/foo.rs"
name = "foo"
harness = false

[features]
default = ["memmap"]
alloc = ["rarena-allocator/alloc", "skl/alloc", "dbutils/alloc"]
std = ["rarena-allocator/default", "crossbeam-skiplist/default", "crossbeam-skiplist-mvcc/default", "bitflags/std", "dbutils/default", "among/default", "skl/std"]
memmap = ["std", "rarena-allocator/memmap", "skl/memmap"]

xxhash3 = ["dbutils/xxhash3", "std"]
xxhash64 = ["dbutils/xxhash64", "std"]

tracing = ["dep:tracing", "dbutils/tracing"]

[dependencies]
among = { version = "0.1", default-features = false, features = ["either"] }
bitflags = { version = "2", default-features = false }
dbutils = { version = "0.12", default-features = false, features = ["crc32fast", "triomphe01"] }
# dbutils = { version = "0.12", path = "../layer0/dbutils", default-features = false, features = ["crc32fast", "triomphe01"] }
derive-where = "1"
ref-cast = "1"
rarena-allocator = { version = "0.4", default-features = false }
crossbeam-skiplist = { version = "0.1", default-features = false, package = "crossbeam-skiplist-pr1132", optional = true }
crossbeam-skiplist-mvcc = { version = "0.2", optional = true }
# skl = { version = "0.22", default-features = false, features = ["alloc"] }
skl = { version = "0.22", path = "../skl-rs", default-features = false, features = ["alloc"] }
paste = "1"
zerocopy = { version = "0.8", features = ["derive"] }
tracing = { version = "0.1", default-features = false, optional = true }
triomphe = "0.1"


[dev-dependencies]
criterion = "0.5"
names = "0.14"
rand = "0.8"
tempfile = "3"

[profile.bench]
opt-level = 3
debug = false
codegen-units = 1
lto = 'thin'
incremental = false
debug-assertions = false
overflow-checks = false
rpath = false

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[lints.rust]
rust_2018_idioms = "warn"
single_use_lifetimes = "warn"
unexpected_cfgs = { level = "warn", check-cfg = [
  'cfg(all_orderwal_tests)',
  'cfg(test_swmr_constructor)',
  'cfg(test_swmr_insert)',
  'cfg(test_swmr_iters)',
  'cfg(test_swmr_get)',
  'cfg(test_swmr_multiple_version_constructor)',
  'cfg(test_swmr_multiple_version_insert)',
  'cfg(test_swmr_multiple_version_iters)',
  'cfg(test_swmr_multiple_version_get)',
] }

[[example]]
name = "zero_cost"
path = "examples/zero_cost.rs"
required-features = ["memmap"]

[[example]]
name = "basic"
path = "examples/basic.rs"
required-features = ["memmap"]

[[example]]
name = "generic_not_sized"
path = "examples/generic_not_sized.rs"
required-features = ["memmap"]

[[example]]
name = "descend"
path = "examples/descend.rs"
required-features = ["memmap"]
